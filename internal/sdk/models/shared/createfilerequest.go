// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type File struct {
	Content  []byte `multipartForm:"content"`
	FileName string `multipartForm:"name=file"`
}

func (o *File) GetContent() []byte {
	if o == nil {
		return []byte{}
	}
	return o.Content
}

func (o *File) GetFileName() string {
	if o == nil {
		return ""
	}
	return o.FileName
}

type CreateFileRequest struct {
	// Name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/) file to be uploaded.
	//
	// If the `purpose` is set to "fine-tune", each line is a JSON record with "prompt" and "completion" fields representing your [training examples](/docs/guides/fine-tuning/prepare-training-data).
	//
	File File `multipartForm:"file"`
	// The intended purpose of the uploaded documents.
	//
	// Use "fine-tune" for [Fine-tuning](/docs/api-reference/fine-tunes). This allows us to validate the format of the uploaded file.
	//
	Purpose string `multipartForm:"name=purpose"`
}

func (o *CreateFileRequest) GetFile() File {
	if o == nil {
		return File{}
	}
	return o.File
}

func (o *CreateFileRequest) GetPurpose() string {
	if o == nil {
		return ""
	}
	return o.Purpose
}
