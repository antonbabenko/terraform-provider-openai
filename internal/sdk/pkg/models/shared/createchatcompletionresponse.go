// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateChatCompletionResponseChoicesFinishReason - The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,
// `length` if the maximum number of tokens specified in the request was reached, or `function_call` if the model called a function.
type CreateChatCompletionResponseChoicesFinishReason string

const (
	CreateChatCompletionResponseChoicesFinishReasonStop         CreateChatCompletionResponseChoicesFinishReason = "stop"
	CreateChatCompletionResponseChoicesFinishReasonLength       CreateChatCompletionResponseChoicesFinishReason = "length"
	CreateChatCompletionResponseChoicesFinishReasonFunctionCall CreateChatCompletionResponseChoicesFinishReason = "function_call"
)

func (e CreateChatCompletionResponseChoicesFinishReason) ToPointer() *CreateChatCompletionResponseChoicesFinishReason {
	return &e
}

func (e *CreateChatCompletionResponseChoicesFinishReason) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stop":
		fallthrough
	case "length":
		fallthrough
	case "function_call":
		*e = CreateChatCompletionResponseChoicesFinishReason(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateChatCompletionResponseChoicesFinishReason: %v", v)
	}
}

type CreateChatCompletionResponseChoices struct {
	// The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,
	// `length` if the maximum number of tokens specified in the request was reached, or `function_call` if the model called a function.
	//
	FinishReason CreateChatCompletionResponseChoicesFinishReason `json:"finish_reason"`
	// The index of the choice in the list of choices.
	Index int64 `json:"index"`
	// A chat completion message generated by the model.
	Message ChatCompletionResponseMessage `json:"message"`
}

// CreateChatCompletionResponse - Represents a chat completion response returned by model, based on the provided input.
type CreateChatCompletionResponse struct {
	// A list of chat completion choices. Can be more than one if `n` is greater than 1.
	Choices []CreateChatCompletionResponseChoices `json:"choices"`
	// A unix timestamp of when the chat completion was created.
	Created int64 `json:"created"`
	// A unique identifier for the chat completion.
	ID string `json:"id"`
	// The model used for the chat completion.
	Model string `json:"model"`
	// The object type, which is always `chat.completion`.
	Object string `json:"object"`
	// Usage statistics for the completion request.
	Usage *CompletionUsage `json:"usage,omitempty"`
}
