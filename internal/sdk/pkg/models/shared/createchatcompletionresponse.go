// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CreateChatCompletionResponseChoicesFinishReason string

const (
	CreateChatCompletionResponseChoicesFinishReasonStop         CreateChatCompletionResponseChoicesFinishReason = "stop"
	CreateChatCompletionResponseChoicesFinishReasonLength       CreateChatCompletionResponseChoicesFinishReason = "length"
	CreateChatCompletionResponseChoicesFinishReasonFunctionCall CreateChatCompletionResponseChoicesFinishReason = "function_call"
)

func (e CreateChatCompletionResponseChoicesFinishReason) ToPointer() *CreateChatCompletionResponseChoicesFinishReason {
	return &e
}

func (e *CreateChatCompletionResponseChoicesFinishReason) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stop":
		fallthrough
	case "length":
		fallthrough
	case "function_call":
		*e = CreateChatCompletionResponseChoicesFinishReason(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateChatCompletionResponseChoicesFinishReason: %v", v)
	}
}

type CreateChatCompletionResponseChoices struct {
	FinishReason CreateChatCompletionResponseChoicesFinishReason `json:"finish_reason"`
	Index        int64                                           `json:"index"`
	Message      ChatCompletionResponseMessage                   `json:"message"`
}

type CreateChatCompletionResponseUsage struct {
	CompletionTokens int64 `json:"completion_tokens"`
	PromptTokens     int64 `json:"prompt_tokens"`
	TotalTokens      int64 `json:"total_tokens"`
}

// CreateChatCompletionResponse - OK
type CreateChatCompletionResponse struct {
	Choices []CreateChatCompletionResponseChoices `json:"choices"`
	Created int64                                 `json:"created"`
	ID      string                                `json:"id"`
	Model   string                                `json:"model"`
	Object  string                                `json:"object"`
	Usage   *CreateChatCompletionResponseUsage    `json:"usage,omitempty"`
}
