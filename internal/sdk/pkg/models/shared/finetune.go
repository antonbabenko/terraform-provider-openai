// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// FineTuneHyperparams - The hyperparameters used for the fine-tuning job. See the [Fine-tuning Guide](/docs/guides/fine-tuning/hyperparameters) for more details.
type FineTuneHyperparams struct {
	// The batch size to use for training. The batch size is the number of
	// training examples used to train a single forward and backward pass.
	//
	BatchSize int64 `json:"batch_size"`
	// The number of classes to use for computing classification metrics.
	//
	ClassificationNClasses *int64 `json:"classification_n_classes,omitempty"`
	// The positive class to use for computing classification metrics.
	//
	ClassificationPositiveClass *string `json:"classification_positive_class,omitempty"`
	// The classification metrics to compute using the validation dataset at the end of every epoch.
	//
	ComputeClassificationMetrics *bool `json:"compute_classification_metrics,omitempty"`
	// The learning rate multiplier to use for training.
	//
	LearningRateMultiplier float64 `json:"learning_rate_multiplier"`
	// The number of epochs to train the model for. An epoch refers to one
	// full cycle through the training dataset.
	//
	NEpochs int64 `json:"n_epochs"`
	// The weight to use for loss on the prompt tokens.
	//
	PromptLossWeight float64 `json:"prompt_loss_weight"`
}

// FineTune - The `FineTune` object represents a fine-tuning job that has been created through the API.
type FineTune struct {
	// The unix timestamp for when the fine-tuning job was created.
	CreatedAt int64 `json:"created_at"`
	// The list of events that have been observed in the lifecycle of the FineTune job.
	Events []FineTuneEvent `json:"events,omitempty"`
	// The name of the fine-tuned model that is being created.
	FineTunedModel string `json:"fine_tuned_model"`
	// The hyperparameters used for the fine-tuning job. See the [Fine-tuning Guide](/docs/guides/fine-tuning/hyperparameters) for more details.
	Hyperparams FineTuneHyperparams `json:"hyperparams"`
	// The object identifier, which can be referenced in the API endpoints.
	ID string `json:"id"`
	// The base model that is being fine-tuned.
	Model string `json:"model"`
	// The object type, which is always "fine-tune".
	Object string `json:"object"`
	// The organization that owns the fine-tuning job.
	OrganizationID string `json:"organization_id"`
	// The compiled results files for the fine-tuning job.
	ResultFiles []OpenAIFile `json:"result_files"`
	// The current status of the fine-tuning job, which can be either `created`, `pending`, `running`, `succeeded`, `failed`, or `cancelled`.
	Status string `json:"status"`
	// The list of files used for training.
	TrainingFiles []OpenAIFile `json:"training_files"`
	// The unix timestamp for when the fine-tuning job was last updated.
	UpdatedAt int64 `json:"updated_at"`
	// The list of files used for validation.
	ValidationFiles []OpenAIFile `json:"validation_files"`
}
