// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openai/v2/internal/sdk/pkg/models/shared"
	"openai/v2/internal/sdk/pkg/utils"
)

type ListFineTuneEventsRequest struct {
	// The ID of the fine-tune job to get events for.
	//
	FineTuneID string `pathParam:"style=simple,explode=false,name=fine_tune_id"`
	// Whether to stream events for the fine-tune job. If set to true,
	// events will be sent as data-only
	// [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)
	// as they become available. The stream will terminate with a
	// `data: [DONE]` message when the job is finished (succeeded, cancelled,
	// or failed).
	//
	// If set to false, only events generated so far will be returned.
	//
	Stream *bool `default:"false" queryParam:"style=form,explode=true,name=stream"`
}

func (l ListFineTuneEventsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListFineTuneEventsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListFineTuneEventsRequest) GetFineTuneID() string {
	if o == nil {
		return ""
	}
	return o.FineTuneID
}

func (o *ListFineTuneEventsRequest) GetStream() *bool {
	if o == nil {
		return nil
	}
	return o.Stream
}

type ListFineTuneEventsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	ListFineTuneEventsResponse *shared.ListFineTuneEventsResponse
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListFineTuneEventsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListFineTuneEventsResponse) GetListFineTuneEventsResponse() *shared.ListFineTuneEventsResponse {
	if o == nil {
		return nil
	}
	return o.ListFineTuneEventsResponse
}

func (o *ListFineTuneEventsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListFineTuneEventsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
