// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	tfTypes "github.com/antonbabenko/terraform-provider-openai/v2/internal/provider/types"
	"github.com/antonbabenko/terraform-provider-openai/v2/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *ImageResourceModel) ToSharedCreateImageRequest() *shared.CreateImageRequest {
	n := new(int64)
	if !r.N.IsUnknown() && !r.N.IsNull() {
		*n = r.N.ValueInt64()
	} else {
		n = nil
	}
	var prompt string
	prompt = r.Prompt.ValueString()

	responseFormat := new(shared.CreateImageRequestResponseFormat)
	if !r.ResponseFormat.IsUnknown() && !r.ResponseFormat.IsNull() {
		*responseFormat = shared.CreateImageRequestResponseFormat(r.ResponseFormat.ValueString())
	} else {
		responseFormat = nil
	}
	size := new(shared.CreateImageRequestSize)
	if !r.Size.IsUnknown() && !r.Size.IsNull() {
		*size = shared.CreateImageRequestSize(r.Size.ValueString())
	} else {
		size = nil
	}
	user := new(string)
	if !r.User.IsUnknown() && !r.User.IsNull() {
		*user = r.User.ValueString()
	} else {
		user = nil
	}
	out := shared.CreateImageRequest{
		N:              n,
		Prompt:         prompt,
		ResponseFormat: responseFormat,
		Size:           size,
		User:           user,
	}
	return &out
}

func (r *ImageResourceModel) RefreshFromSharedImagesResponse(resp *shared.ImagesResponse) {
	if resp != nil {
		r.Created = types.Int64Value(resp.Created)
		r.Data = []tfTypes.ImagesResponseData{}
		if len(r.Data) > len(resp.Data) {
			r.Data = r.Data[:len(resp.Data)]
		}
		for dataCount, dataItem := range resp.Data {
			var data1 tfTypes.ImagesResponseData
			data1.B64JSON = types.StringPointerValue(dataItem.B64JSON)
			data1.URL = types.StringPointerValue(dataItem.URL)
			if dataCount+1 > len(r.Data) {
				r.Data = append(r.Data, data1)
			} else {
				r.Data[dataCount].B64JSON = data1.B64JSON
				r.Data[dataCount].URL = data1.URL
			}
		}
	}
}
